title: "Reporte Inicial - Strings"
author: "Juan Sebastián Castro Salamanca"
date: "`r Sys.Date()`"
output: 
  html_document:
    toc: true
    toc_float: true
    collapsed: true
    theme: journal
    highlight: kate
    df_print: paged
    code_folding: show   
editor_options: 
  markdown: 
    wrap: 72
---

```{r setup, include=FALSE}

knitr::opts_chunk$set(echo = FALSE, message = FALSE, warning = FALSE)
library(readxl)
library(dplyr)
library(purrr)
library(ggplot2)
library(tidyr)


name_conc <- "**5TA Y 6TA**"

Str_Inf <- read_excel("STRING PRUEBA 100.xlsx")

dim(Str_Inf)


cat("\033[1;30m", name_conc, "\033[0m\n")

```

# Información General

`r paste("El presente informe está centrado en los strings de respuesta del concurso", name_conc, "que comprenden un total de", dim(Str_Inf)[1], "concursantes y", dim(Str_Inf)[2] - 9, "ítems (",sum(grepl("^CF-", colnames(Str_Inf))), "funcionales y",sum(grepl("^CC-", colnames(Str_Inf))), "comportamentales). Se encuentran", length(unique(Str_Inf$DOCUMENTO)), "casos únicos y", dim(Str_Inf)[1] - length(unique(Str_Inf$DOCUMENTO)), "caso/s repetido/s")`

```{r, include=FALSE}
indices_repetidos = duplicated(Str_Inf$DOCUMENTO) | 
    duplicated(Str_Inf$DOCUMENTO, fromLast = TRUE)
```

**(Si no existieron casos repetidos, por favor hacer caso omiso a la
siguiente tabla)**

```{r}
arrange(data.frame(Documento = Str_Inf[indices_repetidos, ]$DOCUMENTO, 
                                   Fila = which(indices_repetidos)), Documento)
```

## Municipios

Frente a los municipios de aplicación, se encuentra:

```{r, echo=FALSE}
data.frame(Municipio = names(table(Str_Inf$MUNICIPIO)),
  Participantes = as.vector(table(Str_Inf$MUNICIPIO)))

```

```{r, echo=FALSE}
Comparacion_TF<-(substr(Str_Inf$FORMA_FUNCIONAL, 1, 1) == substr(Str_Inf$NIVEL, 1, 1))

Comparacion_DF<-data.frame(Resultado = names(table (substr(Str_Inf$FORMA_FUNCIONAL, 1, 1) == substr(Str_Inf$NIVEL, 1, 1))),
                 Frecuencia = as.numeric(table (substr(Str_Inf$FORMA_FUNCIONAL, 1, 1) == substr(Str_Inf$NIVEL, 1, 1))),
                 Porcentaje = prop.table(table (substr(Str_Inf$FORMA_FUNCIONAL, 1, 1) == substr(Str_Inf$NIVEL, 1, 1))) * 100)
```

```{r, include=FALSE}
DF <- as.data.frame(table(Str_Inf$EMPLEO, Str_Inf$MUNICIPIO))
DF <- spread(DF, Var2, Freq)
colnames(DF) <- c("OPEC", unique(Str_Inf$MUNICIPIO))
DF[is.na(DF)] <- 0
DF$Conteo_Ceros <- rowSums(DF == 0)
DF$Diferencia <- length(unique(Str_Inf$MUNICIPIO)) - DF$Conteo_Ceros
DF$LOG <- DF$Diferencia == 1

DF_falso <- DF[DF$LOG == FALSE, ]
```

## OPECs

Frente a la relación entre OPECs y municipios de aplicación, se
encontró:

```{r, include=FALSE}
DF_OPECS=data.frame(aggregate(NIVEL_REAL ~ EMPLEO, data = Str_Inf, FUN = function(x) unique(x)))

```

-   `r paste("La cantidad de OPECs evaluadas en el concurso ascendio a ",length(unique(Str_Inf$EMPLEO)),"de las cuales fueron:")`
    -   `r paste (names(table(DF_OPECS$NIVEL_REAL)), ": ", table(DF_OPECS$NIVEL_REAL), sep = "")`

```{r, echo=FALSE}

DF_OPECS
```

-   `r paste("La cantidad de OPECs a las que se concursaron desde más de un municipio fue de:",nrow(DF_falso))`

`r paste("**Si el anterior dato fue 0 (cero), omita la siguiente información.**")`

-   En la siguiente tabla se relacionan las OPECs en cuestión con sus
    diferentes municipios de aplicación.

```{r}
DF_falso[, !(names(DF_falso) %in% c("Conteo_Ceros", "Diferencia", "LOG")) & colSums(DF_falso != 0) > 0]
```

## Nivel y Forma Funcional

```{r, echo=FALSE, warning=FALSE}
ggplot(Str_Inf) +
  aes(x = NIVEL_REAL, y = ..count.., label = ..count..) +
  geom_bar(fill = "#228B90") +
  geom_text(stat = 'count', aes(label = ..count..), vjust = -0.5, size = 4) + # Agrega etiquetas
  labs(
    x = "Niveles",
    y = "Cantidad de concursantes",
    title = "Niveles Reportados"
  ) +
  theme_classic() +
  theme(
    plot.title = element_text(size = 20, hjust = 0.5),
    axis.title.y = element_text(size = 15),
    axis.title.x = element_text(size = 15),
    axis.text.x = element_text(size = 10),
    axis.text.y = element_text(size = 10)
  )
```

-   `r paste("En el", round(Comparacion_DF$Porcentaje.Freq[which(Comparacion_DF$Resultado == TRUE)],2),"% de los casos se implemento una forma de prueba correspondiente al nivel de aplicacion")`

-   `r paste("**Si el porcentaje fue 100%, omita la siguiente información:** La cantidad de casos que no parecen corresponder asciende a", length(which(Comparacion_TF == FALSE)),"y se ubican en las siguientes filas")`

```{r,echo=FALSE}

data.frame(
  Pos = which(Comparacion_TF == FALSE)+1,
  Documento = Str_Inf$DOCUMENTO[which(Comparacion_TF == FALSE)])
```

# Flujos de Respuesta

## Flujo Funcionales

```{r, echo=FALSE, pages.print=10, rownames.print=FALSE}
data.frame(
  Documento = Str_Inf$DOCUMENTO,Str_Inf$NIVEL,
  CF_A = rowSums(Str_Inf[, grepl("^CF", names(Str_Inf))] == "A"),
  CF_B = rowSums(Str_Inf[, grepl("^CF", names(Str_Inf))] == "B"),
  CF_C = rowSums(Str_Inf[, grepl("^CF", names(Str_Inf))] == "C"),
  CF_M = rowSums(Str_Inf[, grepl("^CF", names(Str_Inf))] == "M"),
  CF_O = rowSums(Str_Inf[, grepl("^CF", names(Str_Inf))] == "O"),
  CC_NA = rowSums(Str_Inf[, grepl("^CF", names(Str_Inf))] == "NA"),
  CC_TOTAL = rowSums(Str_Inf[, grepl("^CF", names(Str_Inf))] != ""))

```

## Flujo Comportamentales

```{r, echo=FALSE}

data.frame(  Documento = Str_Inf$DOCUMENTO,Str_Inf$NIVEL,
  CC_A = rowSums(Str_Inf[, grepl("^CC", names(Str_Inf))] == "A"),
  CC_B = rowSums(Str_Inf[, grepl("^CC", names(Str_Inf))] == "B"),
  CC_C = rowSums(Str_Inf[, grepl("^CC", names(Str_Inf))] == "C"),
  CC_M = rowSums(Str_Inf[, grepl("^CC", names(Str_Inf))] == "M"),
  CC_O = rowSums(Str_Inf[, grepl("^CC", names(Str_Inf))] == "O"),
  CC_NA = rowSums(Str_Inf[, grepl("^CC", names(Str_Inf))] == "NA"),
  CC_TOTAL = rowSums(Str_Inf[, grepl("^CC", names(Str_Inf))] != "")
)
```

